<?php
/*   _______________________________________
    |  Obfuscated by PMPR - Php Obfuscator  |
    |             67c83a421f4fd             |
    |_______________________________________|
*/
 namespace Pmpr\Module\DomainManager\REST; use Pmpr\Common\Foundation\Interfaces\Constants; use Pmpr\Common\Foundation\REST\RESTController; use Pmpr\Module\DomainManager\Model\Domain; use WP_Error; use WP_HTTP_Response; use WP_REST_Request; use WP_REST_Response; class Controller extends RESTController { public function __construct() { $this->rest_base = 'domain-manager'; parent::__construct(); } public function register_routes() { $this->register('/check-apikey', [Constants::wwgusigoaksqmwsm => [$this, 'keqwyakawcaaogie']]); $this->register('/get-apikey', [Constants::wwgusigoaksqmwsm => [$this, 'woyommmyekosqaew']]); } public function keqwyakawcaaogie(WP_REST_Request $aqmwamyiwgeeymqa) { $esuksqieigiqcaie = $this->aemeowyaecqmymas($aqmwamyiwgeeymqa, Constants::igswcauwsgmeougs); $iakkeikwceeomgyq = $this->ogkysoamaegikmcy($aqmwamyiwgeeymqa); $keccaugmemegoimu = Domain::symcgieuakksimmu()->mwiwqcqqeoiygwia($esuksqieigiqcaie, $iakkeikwceeomgyq); if ($keccaugmemegoimu && is_string($keccaugmemegoimu)) { $keccaugmemegoimu = $this->qasywwyamoesisyi($keccaugmemegoimu); } else { $this->caokeucsksukesyo()->mskuyeumceaigegs()->debug("can not find domain for {$esuksqieigiqcaie} => {$iakkeikwceeomgyq}"); } return $this->ewmkmmsuiuwmmwoy($keccaugmemegoimu); } public function woyommmyekosqaew(WP_REST_Request $aqmwamyiwgeeymqa) { $omcaqaiqaqygskou = $this->aemeowyaecqmymas($aqmwamyiwgeeymqa, 'auth_key'); $iakkeikwceeomgyq = $this->ogkysoamaegikmcy($aqmwamyiwgeeymqa, true); if ($omcaqaiqaqygskou && $iakkeikwceeomgyq) { $esuksqieigiqcaie = ''; $gqusacuooiagkuom = $this->uwkmaywceaaaigwo()->giiecckwoyiawoyy(); $qymcomwwogumcgwm = $gqusacuooiagkuom->osiemwwsiacmicwk("{$iakkeikwceeomgyq}/pmpr-{$omcaqaiqaqygskou}.txt"); $kuukgsmqkagwaciu = $gqusacuooiagkuom->ykmyiouokskyomii($qymcomwwogumcgwm); if ($kuukgsmqkagwaciu && $kuukgsmqkagwaciu === $omcaqaiqaqygskou) { if ($kwyuqamwgumokoac = $this->ogkysoamaegikmcy($aqmwamyiwgeeymqa)) { $swgwkyqkakceqeia = Domain::symcgieuakksimmu(); $mokawwccycoiqeka = $swgwkyqkakceqeia->gwkkkwyoomgsiaou($kwyuqamwgumokoac); if ($mokawwccycoiqeka) { if ($swgwkyqkakceqeia->koeimwecyiiqgesk($mokawwccycoiqeka, $aqmwamyiwgeeymqa)) { $esuksqieigiqcaie = $swgwkyqkakceqeia->waecsyqmwascmqoa($mokawwccycoiqeka, Constants::igswcauwsgmeougs); } } else { $qoowakyqgwcscuss = $swgwkyqkakceqeia->ucegqiqcwyqmsuwm($kwyuqamwgumokoac, $aqmwamyiwgeeymqa) ? $swgwkyqkakceqeia::wyeieyscswyiskcw : $swgwkyqkakceqeia::qyywsyikosmsacgu; $sogksuscggsicmac = $swgwkyqkakceqeia->gssiscqyqsacmeca()->gsegsiocqmsoayii([Constants::ciyoccqkiamemcmm => $kwyuqamwgumokoac, Constants::ciywsqoeiymemsys => Constants::eqewsqmqmsiocaeg, $swgwkyqkakceqeia::aemeeukyaaokioui => $qoowakyqgwcscuss]); if (!is_wp_error($sogksuscggsicmac)) { $esuksqieigiqcaie = $swgwkyqkakceqeia->waecsyqmwascmqoa($sogksuscggsicmac[Constants::iikosyqiawkweouo], Constants::igswcauwsgmeougs); } } if ($esuksqieigiqcaie) { $keccaugmemegoimu = [Constants::igswcauwsgmeougs => $esuksqieigiqcaie]; } else { $keccaugmemegoimu = $this->caokeucsksukesyo()->euekiyuksecoccus()->gosmqcmmomkqwmis(__('Can not generate api key for your domain right now.', PR__MDL__DOMAIN_MANAGER)); } } else { $keccaugmemegoimu = $this->caokeucsksukesyo()->euekiyuksecoccus()->gosmqcmmomkqwmis(__('Can not detect your domain.', PR__MDL__DOMAIN_MANAGER)); } } else { $keccaugmemegoimu = $this->caokeucsksukesyo()->euekiyuksecoccus()->gosmqcmmomkqwmis(__('Can not validate your request.', PR__MDL__DOMAIN_MANAGER)); } } else { $keccaugmemegoimu = $this->caokeucsksukesyo()->euekiyuksecoccus()->cackyykusuowuiwg(); } return $this->ewmkmmsuiuwmmwoy($keccaugmemegoimu); } }
